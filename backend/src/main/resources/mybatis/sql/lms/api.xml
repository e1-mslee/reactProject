<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.e1.backend.mapper.ApiMapper">

    <select id="selectAllCode" resultType="map">
		select COM_CD_ID,
			   COM_CD,
			   COM_CD_NM,
			   COM_CD_EN,
			   CODE_OPTION_NAME,
			   CODE_OPTION_VALUE,			   
			   SORT_SN
		  from comm_code 
		 where COM_CD_ID = '00001'
	  order by SORT_SN
    </select>

	<select id="unionCountTableQuery" resultType="map">
		<foreach collection="dataList" item="table" separator=" UNION ALL ">
			SELECT COUNT(*) AS cnt, '${table}' AS TABLE_ID FROM ${table}
		</foreach>
	</select>


    <select id="selectMainTableIdList" resultType="map">
		select m.TABLE_ID
		  from std_main m
		<where>
			m.TABLE_ID IN (
				SELECT table_name 
				FROM information_schema.tables 
				WHERE table_schema = DATABASE()
			)
			AND m.VBG_CRE_DTM BETWEEN #{startDate} AND #{endDate}
		</where>
    </select>

    <select id="selectMainTableInfoList" resultType="map">
		SELECT m.TABLE_SEQ,
				m.TABLE_ID,
				m.TABLE_NAME,
				m.TABLE_ID,
				m.VBG_CRE_DTM,
				m.VBG_CRE_USER,
				CASE 
				WHEN EXISTS ( SELECT 1 
								FROM std_header h
							   WHERE h.table_seq = m.table_seq) THEN '다운'
				ELSE ' '
				END AS doc_form,
				'0' AS field_count,
				false AS selected
			FROM std_main m
		<where>
			m.VBG_CRE_DTM BETWEEN #{startDate} AND #{endDate}
		</where>
    </select>

    <delete id="deleteMainTableInfo" parameterType="list">
    delete from std_main
     where TABLE_SEQ in
    <foreach collection="list" item="item" open="(" separator="," close=")">
        #{item}
    </foreach>
    </delete>
 

	<insert id="insertMainTableInfo" parameterType="map">
		INSERT INTO std_main (
			TABLE_NAME,
			TABLE_ID,
			VBG_CRE_USER,
			VBG_CRE_DTM
		) VALUES (
			#{TABLE_NAME},
			#{TABLE_ID},
			'이민수',
			now()
		)
	</insert>

	<update id="updateMainTableInfo" parameterType="map">
		UPDATE std_main
		   SET TABLE_NAME = #{TABLE_NAME},
			   TABLE_ID = #{TABLE_ID},
			   VBG_CRE_USER = '이민수',
			   VBG_CRE_DTM = now()
		 WHERE TABLE_SEQ = #{TABLE_SEQ}
	</update>

    <select id="selectFieldList" parameterType="String" resultType="map">
		select  TABLE_SEQ,
				COL_ID,
				COL_NAME,
				COL_TYPE,
				COL_SIZE,
				CASE 
					WHEN COL_IDX = 0 THEN false
					ELSE true
				END AS COL_IDX,
				CASE 
					WHEN COL_SCH = 0 THEN false
					ELSE true
				END AS COL_SCH,
			    false as 'selected'
		  from  std_field
		 where  TABLE_SEQ = #{tableSeq} 
    </select>


	<insert id="insertTableField" parameterType="map">
		INSERT INTO std_field (
			TABLE_SEQ,COL_ID,COL_NAME,COL_TYPE,COL_SIZE,
			COL_IDX,COL_SCH,VBG_CRE_USER,VBG_CRE_DTM
		) VALUES (
			#{TABLE_SEQ},#{COL_ID},#{COL_NAME},#{COL_TYPE},#{COL_SIZE},
			#{COL_IDX},#{COL_SCH},'이민수',now()
		)
	</insert>

	<update id="updateTableField" parameterType="map">
		UPDATE std_field
		   SET COL_NAME = #{COL_NAME},
			   COL_TYPE = #{COL_TYPE},
			   COL_SIZE = #{COL_SIZE},
			   COL_IDX = #{COL_IDX},
			   COL_SCH = #{COL_SCH},
			   VBG_CRE_USER = '이민수',
			   VBG_CRE_DTM = now()
		 WHERE TABLE_SEQ = #{TABLE_SEQ}
		   AND COL_ID = #{COL_ID}
	</update>

	<delete id="deleteTablefield" parameterType="map">
		delete from std_field
		 where TABLE_SEQ = #{TABLE_SEQ} 
		   AND COL_ID = #{COL_ID}
	</delete>

	<delete id="removeTablefield" parameterType="List">
		delete from std_field
		 where TABLE_SEQ in
		<foreach collection="list" item="item" open="(" separator="," close=")">
        	#{item}
    	</foreach>
	</delete>

	<delete id="removeTableHeader" parameterType="List">
		delete from std_header
		 where TABLE_SEQ in
		<foreach collection="list" item="item" open="(" separator="," close=")">
        	#{item}
    	</foreach>
	</delete>

	<select id="getMainTableInfoData" parameterType="string" resultType="map">
	    select TABLE_SEQ,
	 	       TABLE_NAME,
	 	       TABLE_ID
	      from std_main
		 where TABLE_SEQ = #{tableSeq}
    </select>

	<select id="getHeaderList" parameterType="string" resultType="map">
		select HEADER_ID,
			   TABLE_SEQ,
			   HEADER_NAME,
			   SUPI_HEADER,
			   HEADER_WIDTH,
			   CONN_FIELD,
			   SORT_SN,
			   false as 'selected'
		  from std_header
		 where TABLE_SEQ = #{tableSeq}
    </select>

	<insert id="insertHeaderList" parameterType="map">
		INSERT INTO std_header (
			HEADER_ID,TABLE_SEQ,HEADER_NAME,SUPI_HEADER,HEADER_WIDTH,
			CONN_FIELD,SORT_SN
		) VALUES (
			#{HEADER_ID},#{TABLE_SEQ},#{HEADER_NAME},#{SUPI_HEADER},#{HEADER_WIDTH},
			#{CONN_FIELD},#{SORT_SN}
		)
	</insert>

	<update id="updateHeaderList" parameterType="map">
		UPDATE std_header
		   SET HEADER_NAME = #{HEADER_NAME},
			   SUPI_HEADER = #{SUPI_HEADER},
			   HEADER_WIDTH = #{HEADER_WIDTH},
			   CONN_FIELD = #{CONN_FIELD},
			   SORT_SN = #{SORT_SN}
		 WHERE HEADER_ID = #{HEADER_ID}
		   AND TABLE_SEQ = #{TABLE_SEQ}
	</update>

	<delete id="deleteHeaderList" parameterType="map">
		delete from std_header
		where HEADER_ID = #{HEADER_ID} 
		  AND TABLE_SEQ = #{TABLE_SEQ}
	</delete>

	<update id="createTable" parameterType="string">
		${query}
	</update>

	<select id="tableCreateCheck" parameterType="string">
		SELECT table_name
		  FROM information_schema.tables 
		 WHERE table_schema = DATABASE()
		   and table_name = (select table_id 
		   					   from std_main 
		   					  where table_seq = #{tableSeq})
	</select>

	<delete id="dropTable" parameterType="string">
		drop table ${tableSeq}
	</delete>

	<select  id="tableCountInfo" parameterType="string">
		select count(*)
		  from ${tableName}
	</select>

	<select id="tableexistCheck" parameterType="string">
		SELECT table_name 
		  FROM information_schema.tables 
		 WHERE table_schema = DATABASE()
		   and table_name = (select table_id 
		   					   from std_main 
		   					  where table_seq = #{tableSeq})
	</select>

	<select id="tableDataList" parameterType="string" resultType="map">
		select * from ${tableName}
	</select>

	<select id="changeFiledNm" parameterType="string" resultType="map">
		select f.COL_NAME as COL_NAME,
			   s.HEADER_NAME as HEADER_NAME
		  from std_header s
	      join std_field f
			on f.TABLE_SEQ = s.TABLE_SEQ 
		   and f.COL_ID = s.CONN_FIELD 
		 where s.table_seq = #{tableSeq}
	</select>


</mapper>